// Generated by view binder compiler. Do not edit!
package com.espressif.esptouch.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.espressif.esptouch.android.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEsptouch2Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout activityEsptouch2;

  @NonNull
  public final TextInputEditText aesKeyEdit;

  @NonNull
  public final TextInputLayout aesKeyLayout;

  @NonNull
  public final TextView apBssidLabel;

  @NonNull
  public final TextView apBssidText;

  @NonNull
  public final TextInputEditText apPasswordEdit;

  @NonNull
  public final TextInputLayout apPasswordLayout;

  @NonNull
  public final TextView apSsidLabel;

  @NonNull
  public final TextView apSsidText;

  @NonNull
  public final MaterialButton confirmBtn;

  @NonNull
  public final Group controlGroup;

  @NonNull
  public final TextInputEditText customDataEdit;

  @NonNull
  public final TextInputLayout customDataLayout;

  @NonNull
  public final TextInputEditText deviceCountEdit;

  @NonNull
  public final TextInputLayout deviceCountLayout;

  @NonNull
  public final TextView ipLabel;

  @NonNull
  public final TextView ipText;

  @NonNull
  public final TextView messageView;

  private ActivityEsptouch2Binding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout activityEsptouch2, @NonNull TextInputEditText aesKeyEdit,
      @NonNull TextInputLayout aesKeyLayout, @NonNull TextView apBssidLabel,
      @NonNull TextView apBssidText, @NonNull TextInputEditText apPasswordEdit,
      @NonNull TextInputLayout apPasswordLayout, @NonNull TextView apSsidLabel,
      @NonNull TextView apSsidText, @NonNull MaterialButton confirmBtn, @NonNull Group controlGroup,
      @NonNull TextInputEditText customDataEdit, @NonNull TextInputLayout customDataLayout,
      @NonNull TextInputEditText deviceCountEdit, @NonNull TextInputLayout deviceCountLayout,
      @NonNull TextView ipLabel, @NonNull TextView ipText, @NonNull TextView messageView) {
    this.rootView = rootView;
    this.activityEsptouch2 = activityEsptouch2;
    this.aesKeyEdit = aesKeyEdit;
    this.aesKeyLayout = aesKeyLayout;
    this.apBssidLabel = apBssidLabel;
    this.apBssidText = apBssidText;
    this.apPasswordEdit = apPasswordEdit;
    this.apPasswordLayout = apPasswordLayout;
    this.apSsidLabel = apSsidLabel;
    this.apSsidText = apSsidText;
    this.confirmBtn = confirmBtn;
    this.controlGroup = controlGroup;
    this.customDataEdit = customDataEdit;
    this.customDataLayout = customDataLayout;
    this.deviceCountEdit = deviceCountEdit;
    this.deviceCountLayout = deviceCountLayout;
    this.ipLabel = ipLabel;
    this.ipText = ipText;
    this.messageView = messageView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEsptouch2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEsptouch2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_esptouch2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEsptouch2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout activityEsptouch2 = (ConstraintLayout) rootView;

      id = R.id.aesKeyEdit;
      TextInputEditText aesKeyEdit = ViewBindings.findChildViewById(rootView, id);
      if (aesKeyEdit == null) {
        break missingId;
      }

      id = R.id.aesKeyLayout;
      TextInputLayout aesKeyLayout = ViewBindings.findChildViewById(rootView, id);
      if (aesKeyLayout == null) {
        break missingId;
      }

      id = R.id.apBssidLabel;
      TextView apBssidLabel = ViewBindings.findChildViewById(rootView, id);
      if (apBssidLabel == null) {
        break missingId;
      }

      id = R.id.apBssidText;
      TextView apBssidText = ViewBindings.findChildViewById(rootView, id);
      if (apBssidText == null) {
        break missingId;
      }

      id = R.id.apPasswordEdit;
      TextInputEditText apPasswordEdit = ViewBindings.findChildViewById(rootView, id);
      if (apPasswordEdit == null) {
        break missingId;
      }

      id = R.id.apPasswordLayout;
      TextInputLayout apPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (apPasswordLayout == null) {
        break missingId;
      }

      id = R.id.apSsidLabel;
      TextView apSsidLabel = ViewBindings.findChildViewById(rootView, id);
      if (apSsidLabel == null) {
        break missingId;
      }

      id = R.id.apSsidText;
      TextView apSsidText = ViewBindings.findChildViewById(rootView, id);
      if (apSsidText == null) {
        break missingId;
      }

      id = R.id.confirmBtn;
      MaterialButton confirmBtn = ViewBindings.findChildViewById(rootView, id);
      if (confirmBtn == null) {
        break missingId;
      }

      id = R.id.controlGroup;
      Group controlGroup = ViewBindings.findChildViewById(rootView, id);
      if (controlGroup == null) {
        break missingId;
      }

      id = R.id.customDataEdit;
      TextInputEditText customDataEdit = ViewBindings.findChildViewById(rootView, id);
      if (customDataEdit == null) {
        break missingId;
      }

      id = R.id.customDataLayout;
      TextInputLayout customDataLayout = ViewBindings.findChildViewById(rootView, id);
      if (customDataLayout == null) {
        break missingId;
      }

      id = R.id.deviceCountEdit;
      TextInputEditText deviceCountEdit = ViewBindings.findChildViewById(rootView, id);
      if (deviceCountEdit == null) {
        break missingId;
      }

      id = R.id.deviceCountLayout;
      TextInputLayout deviceCountLayout = ViewBindings.findChildViewById(rootView, id);
      if (deviceCountLayout == null) {
        break missingId;
      }

      id = R.id.ipLabel;
      TextView ipLabel = ViewBindings.findChildViewById(rootView, id);
      if (ipLabel == null) {
        break missingId;
      }

      id = R.id.ipText;
      TextView ipText = ViewBindings.findChildViewById(rootView, id);
      if (ipText == null) {
        break missingId;
      }

      id = R.id.messageView;
      TextView messageView = ViewBindings.findChildViewById(rootView, id);
      if (messageView == null) {
        break missingId;
      }

      return new ActivityEsptouch2Binding((ConstraintLayout) rootView, activityEsptouch2,
          aesKeyEdit, aesKeyLayout, apBssidLabel, apBssidText, apPasswordEdit, apPasswordLayout,
          apSsidLabel, apSsidText, confirmBtn, controlGroup, customDataEdit, customDataLayout,
          deviceCountEdit, deviceCountLayout, ipLabel, ipText, messageView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
