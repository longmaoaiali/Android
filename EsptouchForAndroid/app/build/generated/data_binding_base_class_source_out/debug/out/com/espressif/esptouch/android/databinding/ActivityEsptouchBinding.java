// Generated by view binder compiler. Do not edit!
package com.espressif.esptouch.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ProgressBar;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.espressif.esptouch.android.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEsptouchBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout activityEsptouch;

  @NonNull
  public final TextView apBssidLabel;

  @NonNull
  public final TextView apBssidText;

  @NonNull
  public final TextInputEditText apPasswordEdit;

  @NonNull
  public final TextInputLayout apPasswordLayout;

  @NonNull
  public final TextView apSsidLabel;

  @NonNull
  public final TextView apSsidText;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final MaterialButton confirmBtn;

  @NonNull
  public final ConstraintLayout content;

  @NonNull
  public final TextInputEditText deviceCountEdit;

  @NonNull
  public final TextInputLayout deviceCountLayout;

  @NonNull
  public final TextView messageView;

  @NonNull
  public final RadioButton packageBroadcast;

  @NonNull
  public final RadioGroup packageModeGroup;

  @NonNull
  public final RadioButton packageMulticast;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ConstraintLayout progressView;

  @NonNull
  public final TextView testResult;

  private ActivityEsptouchBinding(@NonNull FrameLayout rootView,
      @NonNull FrameLayout activityEsptouch, @NonNull TextView apBssidLabel,
      @NonNull TextView apBssidText, @NonNull TextInputEditText apPasswordEdit,
      @NonNull TextInputLayout apPasswordLayout, @NonNull TextView apSsidLabel,
      @NonNull TextView apSsidText, @NonNull Button cancelButton,
      @NonNull MaterialButton confirmBtn, @NonNull ConstraintLayout content,
      @NonNull TextInputEditText deviceCountEdit, @NonNull TextInputLayout deviceCountLayout,
      @NonNull TextView messageView, @NonNull RadioButton packageBroadcast,
      @NonNull RadioGroup packageModeGroup, @NonNull RadioButton packageMulticast,
      @NonNull ProgressBar progressBar, @NonNull ConstraintLayout progressView,
      @NonNull TextView testResult) {
    this.rootView = rootView;
    this.activityEsptouch = activityEsptouch;
    this.apBssidLabel = apBssidLabel;
    this.apBssidText = apBssidText;
    this.apPasswordEdit = apPasswordEdit;
    this.apPasswordLayout = apPasswordLayout;
    this.apSsidLabel = apSsidLabel;
    this.apSsidText = apSsidText;
    this.cancelButton = cancelButton;
    this.confirmBtn = confirmBtn;
    this.content = content;
    this.deviceCountEdit = deviceCountEdit;
    this.deviceCountLayout = deviceCountLayout;
    this.messageView = messageView;
    this.packageBroadcast = packageBroadcast;
    this.packageModeGroup = packageModeGroup;
    this.packageMulticast = packageMulticast;
    this.progressBar = progressBar;
    this.progressView = progressView;
    this.testResult = testResult;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEsptouchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEsptouchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_esptouch, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEsptouchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      FrameLayout activityEsptouch = (FrameLayout) rootView;

      id = R.id.apBssidLabel;
      TextView apBssidLabel = ViewBindings.findChildViewById(rootView, id);
      if (apBssidLabel == null) {
        break missingId;
      }

      id = R.id.apBssidText;
      TextView apBssidText = ViewBindings.findChildViewById(rootView, id);
      if (apBssidText == null) {
        break missingId;
      }

      id = R.id.apPasswordEdit;
      TextInputEditText apPasswordEdit = ViewBindings.findChildViewById(rootView, id);
      if (apPasswordEdit == null) {
        break missingId;
      }

      id = R.id.apPasswordLayout;
      TextInputLayout apPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (apPasswordLayout == null) {
        break missingId;
      }

      id = R.id.apSsidLabel;
      TextView apSsidLabel = ViewBindings.findChildViewById(rootView, id);
      if (apSsidLabel == null) {
        break missingId;
      }

      id = R.id.apSsidText;
      TextView apSsidText = ViewBindings.findChildViewById(rootView, id);
      if (apSsidText == null) {
        break missingId;
      }

      id = R.id.cancel_button;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.confirmBtn;
      MaterialButton confirmBtn = ViewBindings.findChildViewById(rootView, id);
      if (confirmBtn == null) {
        break missingId;
      }

      id = R.id.content;
      ConstraintLayout content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.deviceCountEdit;
      TextInputEditText deviceCountEdit = ViewBindings.findChildViewById(rootView, id);
      if (deviceCountEdit == null) {
        break missingId;
      }

      id = R.id.deviceCountLayout;
      TextInputLayout deviceCountLayout = ViewBindings.findChildViewById(rootView, id);
      if (deviceCountLayout == null) {
        break missingId;
      }

      id = R.id.messageView;
      TextView messageView = ViewBindings.findChildViewById(rootView, id);
      if (messageView == null) {
        break missingId;
      }

      id = R.id.packageBroadcast;
      RadioButton packageBroadcast = ViewBindings.findChildViewById(rootView, id);
      if (packageBroadcast == null) {
        break missingId;
      }

      id = R.id.packageModeGroup;
      RadioGroup packageModeGroup = ViewBindings.findChildViewById(rootView, id);
      if (packageModeGroup == null) {
        break missingId;
      }

      id = R.id.packageMulticast;
      RadioButton packageMulticast = ViewBindings.findChildViewById(rootView, id);
      if (packageMulticast == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressView;
      ConstraintLayout progressView = ViewBindings.findChildViewById(rootView, id);
      if (progressView == null) {
        break missingId;
      }

      id = R.id.testResult;
      TextView testResult = ViewBindings.findChildViewById(rootView, id);
      if (testResult == null) {
        break missingId;
      }

      return new ActivityEsptouchBinding((FrameLayout) rootView, activityEsptouch, apBssidLabel,
          apBssidText, apPasswordEdit, apPasswordLayout, apSsidLabel, apSsidText, cancelButton,
          confirmBtn, content, deviceCountEdit, deviceCountLayout, messageView, packageBroadcast,
          packageModeGroup, packageMulticast, progressBar, progressView, testResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
